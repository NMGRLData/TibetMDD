do run
loading script "felix_analysis400_120.py"
loading script "felix_pump_ms.py"
loading script "felix_furnace.py"
loading script "felix_pump_extraction_line.py"
testing...
no interpolation path defined
executed 624.242112
script duration name:analysis400_120 seconds:624.0
loading script "felix_analysis400_120.py"
loading script "felix_pump_ms.py"
loading script "felix_furnace.py"
loading script "felix_pump_extraction_line.py"
testing...
no interpolation path defined
executed 0
loading script "felix_analysis400_120.py"
loading script "felix_pump_ms.py"
loading script "felix_furnace.py"
loading script "felix_pump_extraction_line.py"
testing...
no interpolation path defined
executed 184.0
script duration name:furnace seconds:184.0
loading script "felix_analysis400_120.py"
loading script "felix_pump_ms.py"
loading script "felix_furnace.py"
loading script "felix_pump_extraction_line.py"
testing...
no interpolation path defined
calculate duration
testing...
no interpolation path defined
executed 4.0
executed 4.0
Script duration 808.0
Run total estimated duration= 809.000
run duration: 0:13:29
doing event level: 2
11:38:53 -- Setting default integration. t=1.048576
setting integration time = 1.048576
SetIntegrationTime 1.048576 ===>> OK
----------------- start -----------------
**************** Experiment Type: Ar/Ar, Ar/Ar
close session 4910931888
$$$$$ Clearing conditionals
adding conditionals 
Add queue conditionals
add default conditionals
adding default conditionals from /Users/obama/PychronDev/setupfiles/spectrometer/default_conditionals.yaml
Start automated run bu-FD-F-475
loading script "felix_analysis400_120.py"
loading script "felix_pump_ms.py"
loading script "felix_furnace.py"
loading script "felix_pump_extraction_line.py"
%%%%%%%%%%%%%%%%%% setting automated run bu-FD-F-475
No value "sensitivity_multiplier" in metadata
$$$$$$$$$$$$$$$ auto_save_detector_ic=False
============================= Pre Extraction Check =============================
loading queue conditionals pre_run_terminations
loading system conditionals pre_run_terminations
loading conditionals from /Users/obama/PychronDev/setupfiles/spectrometer/default_conditionals.yaml
11:38:53 -- ******* Pre Extraction Check *******
Get a measurement from the spectrometer
GetData ===>> L2(CDD),0.000628978828996695,H2,0.255338640460595,H1,-0.182584392004031,AX,-0.0958308994867853,L1...
Pre Extraction Termination data. keys=L2(CDD),H2,H1,AX,L1, signals=0.00063,0.25534,-0.18258,-0.09583,-0.03420
11:38:53 -- testing system defined conditionals
Checking default pre extraction terminations n=2
testing L2_CDD_
evaluate ot="L2(CDD).inactive" t="L2_CDD_", ctx="{'L2_CDD_': False}"
GetDeflection L2 (CDD) ===>> 0
testing L2_CDD_==3250
evaluate ot="L2(CDD).deflection==3250" t="L2_CDD_==3250", ctx="{'L2_CDD_': 0.0}"
11:38:53 -- ******* Pre Extraction Check Passed *******
=================================================================================
11:38:53 -- stopping status monitor
stop 4952840912
Alive clients [4873448912]
11:38:53 -- starting status monitor
start 4952840912
Monitor already running
start extraction
do extraction
Analysis started at 11:38:53.232301
Extraction Started felix_furnace.py
11:38:53 -- ******* Extraction Started felix_furnace.py *******
state changed from not run to extraction
DO EXTRACTION <pychron.extraction_line.pyscript_runner.RemotePyScriptRunner object at 0x12743d230>
testing...
no interpolation path defined
executed 1684.0
start_response_recorder () {}
start response recorder
Felix unknown furnace analysis
close ('F',) {}
closing name=F desc=---
checking ownership. requestor=129.138.12.137
check software interlocks F
interlocks []
actuate state mode=None-script, software_lock=True
VALVE-F(CO2 Laser to Bone) software locked
change switch state (True, False)
---------------------------------------- close F () result=[(True, False)]
action=close, ok=True, locked=[True]
open ('D',) {}
opening name=D desc=---
checking ownership. requestor=129.138.12.137
check software interlocks D
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script open_channel False
Open D ===>> OK
GetPercentOutput ===>> 0.0
GetSetpoint ===>> 0.0
GetProcessValue ===>> 18.0
response t=0.000899076461792, out=0, setpoint=0, response=18.0
Get Checksum: -957999286
_execute: Traceback (most recent call last):
  File "/Users/obama/Programming/git/pychron_dev/pychron/pyscripts/pyscript.py", line 391, in execute_snippet
    func(*argv)
  File "<string>", line 13, in main
  File "/Users/obama/Programming/git/pychron_dev/pychron/pyscripts/pyscript.py", line 88, in decorator
    return func(obj, *args, **kw)
  File "/Users/obama/Programming/git/pychron_dev/pychron/pyscripts/valve_pyscript.py", line 87, in _m_open
    description=description))], protocol=ELPROTOCOL)
  File "/Users/obama/Programming/git/pychron_dev/pychron/pyscripts/pyscript.py", line 829, in _manager_action
    r = getattr(man, f)(*a, **k)
  File "/Users/obama/Programming/git/pychron_dev/pychron/extraction_line/extraction_line_manager.py", line 384, in open_valve
    return self._open_close_valve(name, 'open', **kw)
  File "/Users/obama/Programming/git/pychron_dev/pychron/extraction_line/extraction_line_manager.py", line 562, in _open_close_valve
    result = self._change_switch_state(name, mode, action, **kw)
  File "/Users/obama/Programming/git/pychron_dev/pychron/extraction_line/extraction_line_manager.py", line 590, in _change_switch_state
    ret = func(name, mode=mode, **kw)
  File "/Users/obama/Programming/git/pychron_dev/pychron/extraction_line/switch_manager.py", line 337, in open_by_name
    return self._open_(name, mode, force=force)
  File "/Users/obama/Programming/git/pychron_dev/pychron/extraction_line/switch_manager.py", line 592, in _open_
    r, c = self._actuate_(name, action, mode, force=force)
  File "/Users/obama/Programming/git/pychron_dev/pychron/extraction_line/switch_manager.py", line 631, in _actuate_
    result, changed = act(mode='{}-{}'.format(self.mode, mode), force=force)
  File "/Users/obama/Programming/git/pychron_dev/pychron/hardware/switch.py", line 132, in set_open
    return self._actuate_state(self._open, mode, True, True, force)
  File "/Users/obama/Programming/git/pychron_dev/pychron/hardware/switch.py", line 151, in _actuate_state
    success = func(mode, force)
  File "/Users/obama/Programming/git/pychron_dev/pychron/hardware/switch.py", line 163, in _open
    return self._act(mode, 'open_channel', not self.state or force)
  File "/Users/obama/Programming/git/pychron_dev/pychron/hardware/switch.py", line 189, in _act
    r = func(self)
  File "/Users/obama/Programming/git/pychron_dev/pychron/hardware/actuators/actuator.py", line 82, in open_channel
    r = self._cdevice.open_channel(*args, **kw)
  File "/Users/obama/Programming/git/pychron_dev/pychron/hardware/actuators/pychron_gp_actuator.py", line 81, in open_channel
    return self.actuate(obj, 'Open')
  File "/Users/obama/Programming/git/pychron_dev/pychron/hardware/actuators/pychron_gp_actuator.py", line 86, in actuate
    return self._check_actuate(obj, action)
  File "/Users/obama/Programming/git/pychron_dev/pychron/hardware/actuators/pychron_gp_actuator.py", line 102, in _check_actuate
    return self.get_indicator_state(obj) == state
TypeError: get_indicator_state() takes exactly 3 arguments (2 given)

Post Equilibration Started felix_pump_extraction_line.py
Post Measurement Started felix_pump_ms.py
11:38:53 -- ******* Post Equilibration Started felix_pump_extraction_line.py *******
11:38:53 -- ******* Post Measurement Started felix_pump_ms.py *******
testing...
no interpolation path defined
testing...
no interpolation path defined
calculate duration
executed 0
testing...
Pumping spectrometer
no interpolation path defined
open () {'name': 'V'}
executed 4.0
opening name=V desc=---
executed 4.0
Pump after analysis
checking ownership. requestor=129.138.12.137
doing GOSUB
check software interlocks V
interlocks []
testing...
actuate state mode=None-script, software_lock=False
no interpolation path defined
doing actuation None-script open_channel False
executed 4.0
Pump Bone
close () {'description': 'Felix Inlet'}
closing name=--- desc=Felix Inlet
checking ownership. requestor=129.138.12.137
check software interlocks H
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script close_channel False
Open V ===>> OK
Close H ===>> OK
_execute: Traceback (most recent call last):
  File "/Users/obama/Programming/git/pychron_dev/pychron/pyscripts/pyscript.py", line 391, in execute_snippet
    func(*argv)
  File "<string>", line 3, in main
  File "/Users/obama/Programming/git/pychron_dev/pychron/pyscripts/pyscript.py", line 88, in decorator
    return func(obj, *args, **kw)
  File "/Users/obama/Programming/git/pychron_dev/pychron/pyscripts/valve_pyscript.py", line 87, in _m_open
    description=description))], protocol=ELPROTOCOL)
  File "/Users/obama/Programming/git/pychron_dev/pychron/pyscripts/pyscript.py", line 829, in _manager_action
    r = getattr(man, f)(*a, **k)
  File "/Users/obama/Programming/git/pychron_dev/pychron/extraction_line/extraction_line_manager.py", line 384, in open_valve
    return self._open_close_valve(name, 'open', **kw)
  File "/Users/obama/Programming/git/pychron_dev/pychron/extraction_line/extraction_line_manager.py", line 562, in _open_close_valve
    result = self._change_switch_state(name, mode, action, **kw)
  File "/Users/obama/Programming/git/pychron_dev/pychron/extraction_line/extraction_line_manager.py", line 590, in _change_switch_state
    ret = func(name, mode=mode, **kw)
  File "/Users/obama/Programming/git/pychron_dev/pychron/extraction_line/switch_manager.py", line 337, in open_by_name
    return self._open_(name, mode, force=force)
  File "/Users/obama/Programming/git/pychron_dev/pychron/extraction_line/switch_manager.py", line 592, in _open_
    r, c = self._actuate_(name, action, mode, force=force)
  File "/Users/obama/Programming/git/pychron_dev/pychron/extraction_line/switch_manager.py", line 631, in _actuate_
    result, changed = act(mode='{}-{}'.format(self.mode, mode), force=force)
  File "/Users/obama/Programming/git/pychron_dev/pychron/hardware/switch.py", line 132, in set_open
    return self._actuate_state(self._open, mode, True, True, force)
  File "/Users/obama/Programming/git/pychron_dev/pychron/hardware/switch.py", line 151, in _actuate_state
    success = func(mode, force)
  File "/Users/obama/Programming/git/pychron_dev/pychron/hardware/switch.py", line 163, in _open
    return self._act(mode, 'open_channel', not self.state or force)
  File "/Users/obama/Programming/git/pychron_dev/pychron/hardware/switch.py", line 189, in _act
    r = func(self)
  File "/Users/obama/Programming/git/pychron_dev/pychron/hardware/actuators/actuator.py", line 82, in open_channel
    r = self._cdevice.open_channel(*args, **kw)
  File "/Users/obama/Programming/git/pychron_dev/pychron/hardware/actuators/pychron_gp_actuator.py", line 81, in open_channel
    return self.actuate(obj, 'Open')
  File "/Users/obama/Programming/git/pychron_dev/pychron/hardware/actuators/pychron_gp_actuator.py", line 86, in actuate
    return self._check_actuate(obj, action)
  File "/Users/obama/Programming/git/pychron_dev/pychron/hardware/actuators/pychron_gp_actuator.py", line 102, in _check_actuate
    return self.get_indicator_state(obj) == state
TypeError: get_indicator_state() takes exactly 3 arguments (2 given)

Post Measurement Finished unsuccessfully
11:38:53 -- ******* Post Measurement Finished unsuccessfully *******
----------------- finish -----------------
state changed from extraction to failed
----------------- stop -----------------
Extraction Finished unsuccessfully
11:38:53 -- ******* Extraction Finished unsuccessfully *******
failed execution step Extraction Failed
extraction did not complete successfully
11:38:53 -- Automated run bu-FD-F-475 failed duration: 0.447 s
----------------- finish -----------------
----------------- stop -----------------
finish run. runs completed=1
write rem/ex queues
/Users/obama/PychronDev/experiments/rem/FurnaceKSpar12_23_16.rem.txt
/Users/obama/PychronDev/experiments/rem/FurnaceKSpar12_23_16.ex.txt
doing event level: 3
