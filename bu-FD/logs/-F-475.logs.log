do run
loading script "felix_analysis400_120.py"
loading script "felix_pump_ms.py"
loading script "felix_furnace.py"
loading script "felix_pump_extraction_line.py"
testing...
no interpolation path defined
executed 624.242112
script duration name:analysis400_120 seconds:624.0
loading script "felix_analysis400_120.py"
loading script "felix_pump_ms.py"
loading script "felix_furnace.py"
loading script "felix_pump_extraction_line.py"
testing...
no interpolation path defined
executed 0
loading script "felix_analysis400_120.py"
loading script "felix_pump_ms.py"
loading script "felix_furnace.py"
loading script "felix_pump_extraction_line.py"
testing...
no interpolation path defined
executed 184.0
script duration name:furnace seconds:184.0
loading script "felix_analysis400_120.py"
loading script "felix_pump_ms.py"
loading script "felix_furnace.py"
loading script "felix_pump_extraction_line.py"
testing...
no interpolation path defined
calculate duration
testing...
no interpolation path defined
executed 4.0
executed 4.0
Script duration 808.0
Run total estimated duration= 809.000
run duration: 0:13:29
doing event level: 2
07:41:26 -- Setting default integration. t=1.048576
setting integration time = 1.048576
SetIntegrationTime 1.048576 ===>> OK
----------------- start -----------------
**************** Experiment Type: Ar/Ar, Ar/Ar
close session 4903683664
$$$$$ Clearing conditionals
adding conditionals 
Add queue conditionals
add default conditionals
adding default conditionals from /Users/obama/PychronDev/setupfiles/spectrometer/default_conditionals.yaml
Start automated run bu-FD-F-475
loading script "felix_analysis400_120.py"
loading script "felix_pump_ms.py"
loading script "felix_furnace.py"
loading script "felix_pump_extraction_line.py"
%%%%%%%%%%%%%%%%%% setting automated run bu-FD-F-475
No value "sensitivity_multiplier" in metadata
$$$$$$$$$$$$$$$ auto_save_detector_ic=False
============================= Pre Extraction Check =============================
loading queue conditionals pre_run_terminations
loading system conditionals pre_run_terminations
loading conditionals from /Users/obama/PychronDev/setupfiles/spectrometer/default_conditionals.yaml
07:41:27 -- ******* Pre Extraction Check *******
Get a measurement from the spectrometer
GetData ===>> L2(CDD),2.12256350326756,H2,460.060516769378,H1,-0.17488638668135,AX,0.355906409387063,L1,0.12862...
Pre Extraction Termination data. keys=L2(CDD),H2,H1,AX,L1, signals=2.12256,460.06052,-0.17489,0.35591,0.12863
07:41:27 -- testing system defined conditionals
Checking default pre extraction terminations n=2
testing L2_CDD_
evaluate ot="L2(CDD).inactive" t="L2_CDD_", ctx="{'L2_CDD_': False}"
GetDeflection L2 (CDD) ===>> 0
testing L2_CDD_==3250
evaluate ot="L2(CDD).deflection==3250" t="L2_CDD_==3250", ctx="{'L2_CDD_': 0.0}"
07:41:27 -- ******* Pre Extraction Check Passed *******
=================================================================================
07:41:27 -- stopping status monitor
stop 4916925648
Status monitor stopped
07:41:28 -- starting status monitor
start 4916925648
StatusMonitor period=1. Frequencies(state=1, checksum=3, lock=5, owner=5)
start extraction
do extraction
Analysis started at 07:41:30.090903
Extraction Started felix_furnace.py
07:41:30 -- ******* Extraction Started felix_furnace.py *******
state changed from not run to extraction
DO EXTRACTION <pychron.extraction_line.pyscript_runner.RemotePyScriptRunner object at 0x125499ad0>
testing...
no interpolation path defined
executed 1684.0
start_response_recorder () {}
start response recorder
Felix unknown furnace analysis
close ('F',) {}
closing name=F desc=---
checking ownership. requestor=129.138.12.137
check software interlocks F
interlocks []
actuate state mode=None-script, software_lock=True
VALVE-F(CO2 Laser to Bone) software locked
change switch state (True, False)
---------------------------------------- close F () result=[(True, False)]
action=close, ok=True, locked=[True]
open ('D',) {}
opening name=D desc=---
checking ownership. requestor=129.138.12.137
check software interlocks D
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script open_channel True
GetPercentOutput ===>> 0.0
GetSetpoint ===>> 0.0
Open D ===>> OK
GetProcessValue ===>> 38.0
response t=0.000795125961304, out=0, setpoint=0, response=38.0
GetValveState D ===>> OK
change switch state (True, True)
update switch state D True args=() kw={} ncanvase=3
07:41:30 -- OPEN   VALVE-D (Bone to CO2 Laser)
---------------------------------------- open D () result=[(True, True)], time=0.18 sec
action=open, ok=True, locked=[False]
close ('J',) {}
closing name=J desc=---
checking ownership. requestor=129.138.12.137
check software interlocks J
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script close_channel False
Close J ===>> OK
GetValveState J ===>> False
change switch state (True, True)
update switch state J False args=() kw={} ncanvase=3
07:41:30 -- CLOSE  VALVE-J (Bone to APIS)
---------------------------------------- close J () result=[(True, True)]
action=close, ok=True, locked=[False]
close ('FC',) {}
closing name=FC desc=---
checking ownership. requestor=129.138.12.137
check software interlocks FC
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script close_channel True
Close FC ===>> OK
set states for children of FC. state=False
handle state [('FC', False)]
update switch state FC False args=() kw={'refresh': False} ncanvase=3
refresh_canvas_needed fired
GetPercentOutput ===>> 0.0
GetSetpoint ===>> 0.0
GetValveState FC ===>> OK
change switch state (False, False)
---------------------------------------- close FC () result=[(False, False)]
action=close, ok=False, locked=[False]
Failed to close valve Name="FC", Description=""
checking ownership. requestor=129.138.12.137
check software interlocks FC
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script close_channel False
GetProcessValue ===>> 38.0
response t=2.00017595291, out=0, setpoint=0, response=38.0
Close FC ===>> OK
Get Checksum: 1610205284
GetValveState FC ===>> OK
change switch state (False, False)
action=close, ok=False, locked=[False]
Failed to close valve Name="FC", Description=""
Failed to close valve Name="FC", Description=""
GetPercentOutput ===>> 0.0
GetSetpoint ===>> 0.0
GetProcessValue ===>> 38.0
response t=4.00235295296, out=0, setpoint=0, response=38.0
set states for children of FC. state=True
handle state [('FC', True)]
update switch state FC True args=() kw={'refresh': False} ncanvase=3
refresh_canvas_needed fired
set states for children of FC. state=False
handle state [('FC', False)]
update switch state FC False args=() kw={'refresh': False} ncanvase=3
refresh_canvas_needed fired
GetPercentOutput ===>> 0.0
GetSetpoint ===>> 0.0
GetProcessValue ===>> 38.0
response t=6.00499510765, out=0, setpoint=0, response=38.0
Get Checksum: 1610205284
GetPercentOutput ===>> 0.0
GetSetpoint ===>> 0.0
GetProcessValue ===>> 38.0
response t=8.00534796715, out=0, setpoint=0, response=38.0
Get Checksum: 1610205284
GetPercentOutput ===>> 0.0
GetSetpoint ===>> 0.0
GetProcessValue ===>> 38.0
response t=10.0070900917, out=0, setpoint=0, response=38.0
Join finished
block finished. duration 15.0466601849
close ('H',) {}
closing name=H desc=---
checking ownership. requestor=129.138.12.137
check software interlocks H
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script close_channel True
Close H ===>> OK
GetValveState H ===>> False
change switch state (True, True)
update switch state H False args=() kw={} ncanvase=3
07:41:40 -- CLOSE  VALVE-H (Felix Inlet)
---------------------------------------- close H () result=[(True, True)]
action=close, ok=True, locked=[False]
doing GOSUB
testing...
no interpolation path defined
calculate duration
testing...
no interpolation path defined
executed 4.0
calculate duration
testing...
no interpolation path defined
executed 0
executed 4.0
Pump after minibone analysis
doing GOSUB
testing...
no interpolation path defined
executed 4.0
Pump Bone
close () {'description': 'Felix Inlet'}
closing name=--- desc=Felix Inlet
checking ownership. requestor=129.138.12.137
check software interlocks H
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script close_channel False
Close H ===>> OK
GetValveState H ===>> False
change switch state (True, True)
update switch state H False args=() kw={} ncanvase=3
07:41:40 -- CLOSE  VALVE-H (Felix Inlet)
---------------------------------------- close None (Felix Inlet) result=[(True, True)]
action=close, ok=True, locked=[False]
is_closed ('A',) {}
is A () closed?
is closed False
close () {'description': 'CO2 Laser to Bone'}
closing name=--- desc=CO2 Laser to Bone
checking ownership. requestor=129.138.12.137
check software interlocks F
interlocks []
actuate state mode=None-script, software_lock=True
VALVE-F(CO2 Laser to Bone) software locked
change switch state (True, False)
---------------------------------------- close None (CO2 Laser to Bone) result=[(True, False)]
action=close, ok=True, locked=[True]
sleep (1,) {}
SLEEP 1.0
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% disable
set extraction state False (0.75, 'red', 1.5)
disable
Failed to close valve Name="FC", Description=""
close () {'description': 'CO2 Laser to Roughing'}
closing name=--- desc=CO2 Laser to Roughing
checking ownership. requestor=129.138.12.137
check software interlocks G
interlocks []
actuate state mode=None-script, software_lock=True
VALVE-G(CO2 Laser to Roughing) software locked
change switch state (True, False)
---------------------------------------- close None (CO2 Laser to Roughing) result=[(True, False)]
action=close, ok=True, locked=[True]
open () {'description': 'Bone to Turbo'}
opening name=--- desc=Bone to Turbo
checking ownership. requestor=129.138.12.137
check software interlocks C
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script open_channel True
GetPercentOutput ===>> 0.0
GetSetpoint ===>> 0.0
Open C ===>> OK
GetProcessValue ===>> 38.0
response t=12.0069310665, out=0, setpoint=0, response=38.0
GetValveState C ===>> OK
change switch state (True, True)
update switch state C True args=() kw={} ncanvase=3
07:41:42 -- OPEN   VALVE-C (Bone to Turbo)
---------------------------------------- open None (Bone to Turbo) result=[(True, True)], time=0.21 sec
Get Checksum: -1338532271
action=open, ok=True, locked=[False]
open () {'description': 'Bone to Getter GP-50'}
opening name=--- desc=Bone to Getter GP-50
checking ownership. requestor=129.138.12.137
check software interlocks N
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script open_channel False
Open N ===>> OK
GetValveState N ===>> OK
change switch state (True, True)
update switch state N True args=() kw={} ncanvase=3
07:41:42 -- OPEN   VALVE-N (Bone to Getter GP-50)
---------------------------------------- open None (Bone to Getter GP-50) result=[(True, True)], time=0.18 sec
action=open, ok=True, locked=[False]
open () {'description': 'Bone to Diode Laser'}
opening name=--- desc=Bone to Diode Laser
checking ownership. requestor=129.138.12.137
check software interlocks B
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script open_channel True
Open B ===>> OK
GetValveState B ===>> OK
change switch state (True, True)
update switch state B True args=() kw={} ncanvase=3
07:41:43 -- OPEN   VALVE-B (Bone to Diode Laser)
---------------------------------------- open None (Bone to Diode Laser) result=[(True, True)], time=0.20 sec
action=open, ok=True, locked=[False]
open () {'description': 'Bone to CO2 Laser'}
opening name=--- desc=Bone to CO2 Laser
checking ownership. requestor=129.138.12.137
check software interlocks D
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script open_channel False
Open D ===>> OK
GetValveState D ===>> OK
change switch state (True, True)
update switch state D True args=() kw={} ncanvase=3
07:41:43 -- OPEN   VALVE-D (Bone to CO2 Laser)
---------------------------------------- open None (Bone to CO2 Laser) result=[(True, True)], time=0.16 sec
action=open, ok=True, locked=[False]
sleep (1,) {}
SLEEP 1.0
GetPercentOutput ===>> 0.0
GetSetpoint ===>> 0.0
GetProcessValue ===>> 38.0
response t=14.0082550049, out=0, setpoint=0, response=38.0
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% disable
set extraction state False (0.75, 'red', 1.5)
disable
executed 1684.0
Post Equilibration Started felix_pump_extraction_line.py
07:41:44 -- ******* Post Equilibration Started felix_pump_extraction_line.py *******
Post Measurement Started felix_pump_ms.py
07:41:44 -- ******* Post Measurement Started felix_pump_ms.py *******
testing...
no interpolation path defined
calculate duration
testing...
no interpolation path defined
testing...
executed 4.0
no interpolation path defined
executed 4.0
executed 0
Pump after analysis
Pumping spectrometer
open () {'name': 'V'}
doing GOSUB
opening name=V desc=---
testing...
no interpolation path defined
executed 4.0
checking ownership. requestor=129.138.12.137
Pump Bone
check software interlocks V
interlocks []
close () {'description': 'Felix Inlet'}
actuate state mode=None-script, software_lock=False
closing name=--- desc=Felix Inlet
doing actuation None-script open_channel True
checking ownership. requestor=129.138.12.137
check software interlocks H
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script close_channel False
Open V ===>> OK
Close H ===>> OK
GetValveState V ===>> OK
change switch state (True, True)
update switch state V True args=() kw={} ncanvase=3
07:41:44 -- OPEN   VALVE-V (Felix Ion Pump)
---------------------------------------- open V () result=[(True, True)], time=0.20 sec
GetValveState H ===>> False
change switch state (True, True)
update switch state H False args=() kw={} ncanvase=3
07:41:44 -- CLOSE  VALVE-H (Felix Inlet)
---------------------------------------- close None (Felix Inlet) result=[(True, True)]
action=open, ok=True, locked=[False]
executed 0
felix_pump_ms.py completed successfully
setting _ms_pumptime
Post Measurement Finished
07:41:44 -- ******* Post Measurement Finished *******
----------------- finish -----------------
state changed from extraction to failed
----------------- stop -----------------
Extraction Finished unsuccessfully
07:41:44 -- ******* Extraction Finished unsuccessfully *******
failed execution step Extraction Failed
extraction did not complete successfully
07:41:44 -- Automated run bu-FD-F-475 failed duration: 17.851 s
----------------- finish -----------------
----------------- stop -----------------
finish run. runs completed=1
write rem/ex queues
/Users/obama/PychronDev/experiments/rem/FurnaceKSpar12_23_16.rem.txt
/Users/obama/PychronDev/experiments/rem/FurnaceKSpar12_23_16.ex.txt
doing event level: 3
