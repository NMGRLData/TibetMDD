do run
loading script "felix_analysis400_120.py"
loading script "felix_pump_ms.py"
loading script "felix_air_x2.py"
loading script "felix_pump_extraction_line.py"
testing...
no interpolation path defined
executed 624.242112
script duration name:analysis400_120 seconds:624.0
loading script "felix_analysis400_120.py"
loading script "felix_pump_ms.py"
loading script "felix_air_x2.py"
loading script "felix_pump_extraction_line.py"
testing...
no interpolation path defined
executed 0
loading script "felix_analysis400_120.py"
loading script "felix_pump_ms.py"
loading script "felix_air_x2.py"
loading script "felix_pump_extraction_line.py"
testing...
no interpolation path defined
calculate duration
testing...
no interpolation path defined
executed 0
calculate duration
testing...
no interpolation path defined
executed 0
calculate duration
testing...
no interpolation path defined
executed 32.0
calculate duration
testing...
no interpolation path defined
executed 34.0
calculate duration
testing...
no interpolation path defined
executed 2.0
calculate duration
testing...
no interpolation path defined
executed 34.0
calculate duration
testing...
no interpolation path defined
executed 34.0
calculate duration
testing...
no interpolation path defined
executed 34.0
executed 174.0
script duration name:air_x2 seconds:174.0
loading script "felix_analysis400_120.py"
loading script "felix_pump_ms.py"
loading script "felix_air_x2.py"
loading script "felix_pump_extraction_line.py"
testing...
no interpolation path defined
calculate duration
testing...
no interpolation path defined
executed 4.0
executed 4.0
Script duration 798.0
Run total estimated duration= 799.000
run duration: 0:13:19
doing event level: 2
13:10:00 -- Setting default integration. t=1.048576
setting integration time = 1.048576
SetIntegrationTime 1.048576 ===>> OK
----------------- start -----------------
**************** Experiment Type: Ar/Ar, Ar/Ar
close session 4909374352
$$$$$ Clearing conditionals
adding conditionals 
Add queue conditionals
add default conditionals
adding default conditionals from /Users/obama/PychronDev/setupfiles/spectrometer/default_conditionals.yaml
Start automated run ba-01-F-509
loading script "felix_analysis400_120.py"
loading script "felix_pump_ms.py"
loading script "felix_air_x2.py"
loading script "felix_pump_extraction_line.py"
%%%%%%%%%%%%%%%%%% setting automated run ba-01-F-509
No value "sensitivity_multiplier" in metadata
$$$$$$$$$$$$$$$ auto_save_detector_ic=False
============================= Pre Extraction Check =============================
loading queue conditionals pre_run_terminations
loading system conditionals pre_run_terminations
loading conditionals from /Users/obama/PychronDev/setupfiles/spectrometer/default_conditionals.yaml
13:10:00 -- ******* Pre Extraction Check *******
Get a measurement from the spectrometer
Pre Extraction Termination data. keys=L2(CDD),H2,H1,AX,L1, signals=0.00332,0.82562,0.02923,-0.19454,-0.58275
13:10:00 -- testing system defined conditionals
Checking default pre extraction terminations n=2
testing L2_CDD_
evaluate ot="L2(CDD).inactive" t="L2_CDD_", ctx="{'L2_CDD_': False}"
GetDeflection L2 (CDD) ===>> 0
testing L2_CDD_==3250
evaluate ot="L2(CDD).deflection==3250" t="L2_CDD_==3250", ctx="{'L2_CDD_': 0.0}"
13:10:00 -- ******* Pre Extraction Check Passed *******
=================================================================================
13:10:00 -- stopping status monitor
stop 4993536464
Status monitor stopped
Status monitor finished
13:10:02 -- starting status monitor
start 4993536464
StatusMonitor period=1. Frequencies(state=1, checksum=3, lock=5, owner=5)
start extraction
do extraction
Analysis started at 13:10:03.763127
Extraction Started felix_air_x2.py
13:10:03 -- ******* Extraction Started felix_air_x2.py *******
state changed from not run to extraction
DO EXTRACTION <pychron.extraction_line.pyscript_runner.RemotePyScriptRunner object at 0x123593050>
testing...
no interpolation path defined
calculate duration
testing...
no interpolation path defined
executed 0
calculate duration
testing...
no interpolation path defined
executed 0
calculate duration
testing...
no interpolation path defined
executed 32.0
calculate duration
testing...
no interpolation path defined
executed 34.0
calculate duration
testing...
no interpolation path defined
executed 2.0
calculate duration
testing...
no interpolation path defined
executed 34.0
calculate duration
testing...
no interpolation path defined
executed 34.0
calculate duration
testing...
no interpolation path defined
executed 34.0
executed 174.0
Air Pipette x2
doing GOSUB
testing...
no interpolation path defined
executed 0
Waiting for minibone access
wait ('JanMiniboneFlag', 0) {}
waiting for JanMiniboneFlag = 0
Read JanMiniboneFlag ===>> 0
finished waiting
Minibone released
wait ('MinibonePumpTimeFlag', 0) {}
waiting for MinibonePumpTimeFlag = 0
Read MinibonePumpTimeFlag ===>> 0
finished waiting
acquire ('FelixMiniboneFlag',) {'clear': True}
acquire FelixMiniboneFlag
Set FelixMiniboneFlag 1 ===>> OK
FelixMiniboneFlag acquired
set extraction state False (0.75, 'red', 1.5)
minibone acquired
executed 0
WaitForMiniboneAccess.py completed successfully
gosub finished
doing GOSUB
testing...
no interpolation path defined
executed 0
Prepare for Air Shot
close () {'description': 'Felix Inlet'}
closing name=--- desc=Felix Inlet
checking ownership. requestor=129.138.12.137
check software interlocks H
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script close_channel False
Close H ===>> OK
GetValveState H ===>> False
change switch state (False, False)
---------------------------------------- close None (Felix Inlet) result=[(False, False)]
locked=[False]
open () {'description': 'Felix Ion Pump'}
opening name=--- desc=Felix Ion Pump
checking ownership. requestor=129.138.12.137
check software interlocks V
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script open_channel False
Open V ===>> OK
GetValveState V ===>> OK
change switch state (True, True)
update switch state V True args=() kw={} ncanvase=5
13:10:04 -- OPEN   VALVE-V (Felix Ion Pump)
---------------------------------------- open None (Felix Ion Pump) result=[(True, True)], time=0.15 sec
locked=[False]
close () {'description': 'Microbone to Minibone'}
closing name=--- desc=Microbone to Minibone
checking ownership. requestor=129.138.12.137
check software interlocks L
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script close_channel False
Close L ===>> OK
GetValveState L ===>> False
change switch state (False, False)
---------------------------------------- close None (Microbone to Minibone) result=[(False, False)]
locked=[False]
close () {'description': 'Quad Inlet'}
closing name=--- desc=Quad Inlet
checking ownership. requestor=129.138.12.137
check software interlocks Q
Get Checksum: 1377587088
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script close_channel True
Close Q ===>> OK
GetValveState Q ===>> False
change switch state (False, False)
---------------------------------------- close None (Quad Inlet) result=[(False, False)]
locked=[False]
open () {'description': 'Bone to Turbo'}
opening name=--- desc=Bone to Turbo
checking ownership. requestor=129.138.12.137
check software interlocks C
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script open_channel False
Open C ===>> OK
GetValveState C ===>> OK
change switch state (True, True)
update switch state C True args=() kw={} ncanvase=5
13:10:05 -- OPEN   VALVE-C (Bone to Turbo)
---------------------------------------- open None (Bone to Turbo) result=[(True, True)], time=0.25 sec
locked=[False]
open () {'description': 'Bone to Minibone'}
opening name=--- desc=Bone to Minibone
checking ownership. requestor=129.138.12.137
check software interlocks E
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script open_channel False
Open E ===>> OK
GetValveState E ===>> OK
change switch state (True, True)
update switch state E True args=() kw={} ncanvase=5
13:10:05 -- OPEN   VALVE-E (Bone to Minibone)
---------------------------------------- open None (Bone to Minibone) result=[(True, True)], time=0.17 sec
set states for children of Q. state=False
handle state [('Q', False)]
update switch state Q False args=() kw={'refresh': False} ncanvase=5
refresh_canvas_needed fired
locked=[False]
open () {'description': 'Minibone to Bone'}
opening name=--- desc=Minibone to Bone
checking ownership. requestor=129.138.12.137
check software interlocks I
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script open_channel True
Open I ===>> OK
GetValveState I ===>> OK
change switch state (True, True)
update switch state I True args=() kw={} ncanvase=5
13:10:06 -- OPEN   VALVE-I (Minibone to Bone)
---------------------------------------- open None (Minibone to Bone) result=[(True, True)], time=0.57 sec
locked=[False]
open () {'description': 'Bone to Getter GP-50'}
opening name=--- desc=Bone to Getter GP-50
checking ownership. requestor=129.138.12.137
check software interlocks N
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script open_channel False
Open N ===>> OK
GetValveState N ===>> OK
change switch state (True, True)
update switch state N True args=() kw={} ncanvase=5
13:10:06 -- OPEN   VALVE-N (Bone to Getter GP-50)
---------------------------------------- open None (Bone to Getter GP-50) result=[(True, True)], time=0.21 sec
locked=[False]
close () {'description': 'Bone to CO2 Laser'}
closing name=--- desc=Bone to CO2 Laser
checking ownership. requestor=129.138.12.137
check software interlocks D
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script close_channel True
Close D ===>> OK
GetValveState D ===>> False
change switch state (False, False)
---------------------------------------- close None (Bone to CO2 Laser) result=[(False, False)]
locked=[False]
close () {'description': 'Bone to Diode Laser'}
closing name=--- desc=Bone to Diode Laser
checking ownership. requestor=129.138.12.137
check software interlocks B
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script close_channel True
Close B ===>> OK
GetValveState B ===>> False
change switch state (False, False)
---------------------------------------- close None (Bone to Diode Laser) result=[(False, False)]
locked=[False]
executed 0
PrepareForAirShot.py completed successfully
gosub finished
doing GOSUB
testing...
no interpolation path defined
executed 32.0
Evacuate Pipette 2
open () {'description': 'Minibone to Turbo'}
opening name=--- desc=Minibone to Turbo
checking ownership. requestor=129.138.12.137
check software interlocks P
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script open_channel False
Open P ===>> OK
GetValveState P ===>> OK
change switch state (True, True)
update switch state P True args=() kw={} ncanvase=5
13:10:07 -- OPEN   VALVE-P (Minibone to Turbo)
---------------------------------------- open None (Minibone to Turbo) result=[(True, True)], time=0.24 sec
set states for children of B. state=False
set states for children of D. state=False
handle state [('B', False), ('D', False)]
update switch state B False args=() kw={'refresh': True} ncanvase=5
update switch state D False args=() kw={'refresh': False} ncanvase=5
locked=[False]
close () {'description': 'Inner Pipette 2'}
closing name=--- desc=Inner Pipette 2
checking ownership. requestor=129.138.12.137
check software interlocks Z
interlocks ['Y']
actuate state mode=None-script, software_lock=False
doing actuation None-script close_channel False
Close Z ===>> OK
GetValveState Z ===>> False
change switch state (False, False)
---------------------------------------- close None (Inner Pipette 2) result=[(False, False)]
locked=[False]
sleep (1,) {}
SLEEP 1.0
refresh_canvas_needed fired
Get Checksum: -1806056037
open () {'description': 'Outer Pipette 2'}
opening name=--- desc=Outer Pipette 2
checking ownership. requestor=129.138.12.137
check software interlocks Y
interlocks ['Z']
actuate state mode=None-script, software_lock=False
doing actuation None-script open_channel True
Open Y ===>> OK
set states for children of Y. state=True
handle state [('Y', True)]
update switch state Y True args=() kw={'refresh': False} ncanvase=5
GetValveState Y ===>> OK
change switch state (True, True)
update switch state Y True args=() kw={} ncanvase=5
refresh_canvas_needed fired
13:10:09 -- OPEN   VALVE-Y (Outer Pipette 2)
---------------------------------------- open None (Outer Pipette 2) result=[(True, True)], time=0.31 sec
locked=[False]
sleep (15,) {}
SLEEP 15.0
block started
WaitControl setup for 15.0  
Get Checksum: -294804809
Get Checksum: -294804809
Get Checksum: -294804809
Get Checksum: -294804809
Get Checksum: -294804809
Join finished
block finished. duration 15.0500330925
executed 48.0
EvacPipette2.py completed successfully
gosub finished
doing GOSUB
testing...
no interpolation path defined
executed 34.0
Fill Pipette 2
close () {'description': 'Outer Pipette 2'}
closing name=--- desc=Outer Pipette 2
checking ownership. requestor=129.138.12.137
check software interlocks Y
interlocks ['Z']
actuate state mode=None-script, software_lock=False
doing actuation None-script close_channel True
Close Y ===>> OK
GetValveState Y ===>> False
change switch state (False, False)
---------------------------------------- close None (Outer Pipette 2) result=[(False, False)]
locked=[False]
sleep (1,) {}
SLEEP 1.0
set states for children of Y. state=False
handle state [('Y', False)]
update switch state Y False args=() kw={'refresh': False} ncanvase=5
refresh_canvas_needed fired
not filling air pipette
sleep (15,) {}
SLEEP 15.0
block started
WaitControl setup for 15.0  
Get Checksum: -1806056037
Get Checksum: -1806056037
Get Checksum: -1806056037
Get Checksum: -1806056037
User entered calibrated position 2
Move to hole 2 type=<type 'str'>
hole=2, position=(8.45488875, 0.0), calibrated_position=(8.45488875, 0.0)
{"units": "mm", "position": -8.45488875, "command": "MoveAbsolute", "drive": "feeder", "velocity": null} ===>> OK
Get Checksum: -1806056037
{"units": "mm", "command": "GetPosition", "drive": "feeder"} ===>> -968
update feeder position=968.0
{"command": "Moving", "drive": "feeder"} ===>> OK
{"units": "mm", "command": "GetPosition", "drive": "feeder"} ===>> -1819
update feeder position=1819.0
{"command": "Moving", "drive": "feeder"} ===>> OK
{"units": "mm", "command": "GetPosition", "drive": "feeder"} ===>> -2829
update feeder position=2829.0
{"command": "Moving", "drive": "feeder"} ===>> OK
{"units": "mm", "command": "GetPosition", "drive": "feeder"} ===>> -3956
update feeder position=3956.0
Join finished
block finished. duration 15.0382490158
close () {'description': 'Inner Pipette 2'}
closing name=--- desc=Inner Pipette 2
checking ownership. requestor=129.138.12.137
check software interlocks Z
interlocks ['Y']
actuate state mode=None-script, software_lock=False
doing actuation None-script close_channel False
Close Z ===>> OK
GetValveState Z ===>> False
change switch state (False, False)
---------------------------------------- close None (Inner Pipette 2) result=[(False, False)]
locked=[False]
sleep (1,) {}
SLEEP 1.0
{"command": "Moving", "drive": "feeder"} ===>> OK
{"units": "mm", "command": "GetPosition", "drive": "feeder"} ===>> -5550
update feeder position=5550.0
{"command": "Moving", "drive": "feeder"} ===>> OK
Get Checksum: -1806056037
executed 51.0
FillPipette2.py completed successfully
gosub finished
doing GOSUB
testing...
no interpolation path defined
executed 2.0
Prepare for air expansion
close () {'description': 'Bone to Turbo'}
closing name=--- desc=Bone to Turbo
checking ownership. requestor=129.138.12.137
check software interlocks C
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script close_channel True
Close C ===>> OK
{"units": "mm", "command": "GetPosition", "drive": "feeder"} ===>> -6964
update feeder position=6964.0
GetValveState C ===>> False
change switch state (False, False)
---------------------------------------- close None (Bone to Turbo) result=[(False, False)]
locked=[False]
sleep (1,) {}
SLEEP 1.0
{"command": "Moving", "drive": "feeder"} ===>> OK
set states for children of C. state=False
handle state [('C', False)]
update switch state C False args=() kw={'refresh': False} ncanvase=5
refresh_canvas_needed fired
{"units": "mm", "command": "GetPosition", "drive": "feeder"} ===>> -8586
update feeder position=8586.0
{"command": "Moving", "drive": "feeder"} ===>> OK
open () {'description': 'Bone to Minibone'}
opening name=--- desc=Bone to Minibone
checking ownership. requestor=129.138.12.137
check software interlocks E
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script open_channel False
Open E ===>> OK
GetValveState E ===>> OK
change switch state (True, True)
update switch state E True args=() kw={} ncanvase=5
13:10:43 -- OPEN   VALVE-E (Bone to Minibone)
---------------------------------------- open None (Bone to Minibone) result=[(True, True)], time=0.19 sec
{"units": "mm", "command": "GetPosition", "drive": "feeder"} ===>> -10361
update feeder position=10361.0
{"command": "Moving", "drive": "feeder"} ===>> OK
locked=[False]
open () {'description': 'Minibone to Bone'}
opening name=--- desc=Minibone to Bone
checking ownership. requestor=129.138.12.137
check software interlocks I
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script open_channel False
Open I ===>> OK
GetValveState I ===>> OK
change switch state (True, True)
update switch state I True args=() kw={} ncanvase=5
13:10:44 -- OPEN   VALVE-I (Minibone to Bone)
---------------------------------------- open None (Minibone to Bone) result=[(True, True)], time=0.49 sec
{"units": "mm", "command": "GetPosition", "drive": "feeder"} ===>> -12748
update feeder position=12748.0
{"command": "Moving", "drive": "feeder"} ===>> OK
locked=[False]
executed 3.0
PrepareForAirShotExpansion.py completed successfully
gosub finished
doing GOSUB
testing...
no interpolation path defined
executed 34.0
Expand Pipette 2
close () {'description': 'Minibone to Turbo'}
closing name=--- desc=Minibone to Turbo
checking ownership. requestor=129.138.12.137
check software interlocks P
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script close_channel True
Close P ===>> OK
GetValveState P ===>> False
change switch state (False, False)
---------------------------------------- close None (Minibone to Turbo) result=[(False, False)]
locked=[False]
sleep (2,) {}
SLEEP 2.0
block started
WaitControl setup for 2.0  
{"units": "mm", "command": "GetPosition", "drive": "feeder"} ===>> -14560
update feeder position=14560.0
{"command": "Moving", "drive": "feeder"} ===>> OK
set states for children of P. state=False
handle state [('P', False)]
update switch state P False args=() kw={'refresh': False} ncanvase=5
refresh_canvas_needed fired
Get Checksum: 50379264
{"units": "mm", "command": "GetPosition", "drive": "feeder"} ===>> -16099
update feeder position=16099.0
{"command": "Moving", "drive": "feeder"} ===>> OK
{"units": "mm", "command": "GetPosition", "drive": "feeder"} ===>> -17564
update feeder position=17564.0
{"command": "Moving", "drive": "feeder"} ===>> OK
Join finished
block finished. duration 2.01074719429
open () {'description': 'Outer Pipette 2'}
opening name=--- desc=Outer Pipette 2
checking ownership. requestor=129.138.12.137
check software interlocks Y
interlocks ['Z']
actuate state mode=None-script, software_lock=False
doing actuation None-script open_channel True
{"units": "mm", "command": "GetPosition", "drive": "feeder"} ===>> -18913
update feeder position=18913.0
{"command": "Moving", "drive": "feeder"} ===>> OK
Open Y ===>> OK
GetValveState Y ===>> OK
change switch state (True, True)
update switch state Y True args=() kw={} ncanvase=5
13:10:47 -- OPEN   VALVE-Y (Outer Pipette 2)
---------------------------------------- open None (Outer Pipette 2) result=[(True, True)], time=0.30 sec
locked=[False]
sleep (15,) {}
SLEEP 15.0
block started
WaitControl setup for 15.0  
{"units": "mm", "command": "GetPosition", "drive": "feeder"} ===>> -20027
update feeder position=20027.0
{"command": "Moving", "drive": "feeder"} ===>> OK
{"units": "mm", "command": "GetPosition", "drive": "feeder"} ===>> -21043
update feeder position=21043.0
{"command": "Moving", "drive": "feeder"} ===>> OK
Get Checksum: 1707848124
{"units": "mm", "command": "GetPosition", "drive": "feeder"} ===>> -21897
update feeder position=21897.0
{"command": "Moving", "drive": "feeder"} ===>> OK
{"units": "mm", "command": "GetPosition", "drive": "feeder"} ===>> -22644
update feeder position=22644.0
{"command": "Moving", "drive": "feeder"} ===>> OK
{"units": "mm", "command": "GetPosition", "drive": "feeder"} ===>> -22758
update feeder position=22758.0
{"command": "Moving", "drive": "feeder"} ===>> False
{"units": "mm", "command": "GetPosition", "drive": "feeder"} ===>> -22758
update feeder position=22758.0
{"command": "Moving", "drive": "feeder"} ===>> False
{"units": "mm", "command": "GetPosition", "drive": "feeder"} ===>> -22758
update feeder position=22758.0
{"command": "Moving", "drive": "feeder"} ===>> False
Move complete
querying axis positions
{"units": "mm", "command": "GetPosition", "drive": "feeder"} ===>> -22758
update feeder position=22758.0
Get Checksum: 1707848124
Get Checksum: 1707848124
Get Checksum: 1707848124
Get Checksum: 1707848124
Join finished
block finished. duration 15.0413510799
executed 51.0
ExpandPipette2.py completed successfully
gosub finished
close () {'description': 'Outer Pipette 2'}
closing name=--- desc=Outer Pipette 2
checking ownership. requestor=129.138.12.137
check software interlocks Y
interlocks ['Z']
actuate state mode=None-script, software_lock=False
doing actuation None-script close_channel True
Close Y ===>> OK
set states for children of Y. state=False
handle state [('Y', False)]
update switch state Y False args=() kw={'refresh': False} ncanvase=5
GetValveState Y ===>> False
change switch state (False, False)
---------------------------------------- close None (Outer Pipette 2) result=[(False, False)]
refresh_canvas_needed fired
locked=[False]
sleep (1,) {}
SLEEP 1.0
Shot 2
doing GOSUB
testing...
no interpolation path defined
executed 34.0
Fill Pipette 2
close () {'description': 'Outer Pipette 2'}
closing name=--- desc=Outer Pipette 2
Get Checksum: 50379264
checking ownership. requestor=129.138.12.137
check software interlocks Y
interlocks ['Z']
actuate state mode=None-script, software_lock=False
doing actuation None-script close_channel False
Close Y ===>> OK
GetValveState Y ===>> False
change switch state (False, False)
---------------------------------------- close None (Outer Pipette 2) result=[(False, False)]
locked=[False]
sleep (1,) {}
SLEEP 1.0
not filling air pipette
sleep (15,) {}
SLEEP 15.0
block started
WaitControl setup for 15.0  
Get Checksum: 50379264
Get Checksum: 50379264
Get Checksum: 50379264
Get Checksum: 50379264
Get Checksum: 50379264
Join finished
block finished. duration 15.0415198803
close () {'description': 'Inner Pipette 2'}
closing name=--- desc=Inner Pipette 2
checking ownership. requestor=129.138.12.137
check software interlocks Z
interlocks ['Y']
actuate state mode=None-script, software_lock=False
doing actuation None-script close_channel False
Close Z ===>> OK
GetValveState Z ===>> False
change switch state (False, False)
---------------------------------------- close None (Inner Pipette 2) result=[(False, False)]
locked=[False]
sleep (1,) {}
SLEEP 1.0
executed 51.0
FillPipette2.py completed successfully
gosub finished
doing GOSUB
testing...
no interpolation path defined
executed 34.0
Expand Pipette 2
close () {'description': 'Minibone to Turbo'}
closing name=--- desc=Minibone to Turbo
checking ownership. requestor=129.138.12.137
check software interlocks P
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script close_channel False
Close P ===>> OK
GetValveState P ===>> False
change switch state (False, False)
---------------------------------------- close None (Minibone to Turbo) result=[(False, False)]
locked=[False]
sleep (2,) {}
SLEEP 2.0
block started
WaitControl setup for 2.0  
Get Checksum: 50379264
Join finished
block finished. duration 2.01045203209
open () {'description': 'Outer Pipette 2'}
opening name=--- desc=Outer Pipette 2
checking ownership. requestor=129.138.12.137
check software interlocks Y
interlocks ['Z']
actuate state mode=None-script, software_lock=False
doing actuation None-script open_channel True
Open Y ===>> OK
GetValveState Y ===>> OK
change switch state (True, True)
update switch state Y True args=() kw={} ncanvase=5
13:11:23 -- OPEN   VALVE-Y (Outer Pipette 2)
---------------------------------------- open None (Outer Pipette 2) result=[(True, True)], time=0.28 sec
locked=[False]
sleep (15,) {}
SLEEP 15.0
block started
WaitControl setup for 15.0  
Get Checksum: 1707848124
Get Checksum: 1707848124
Get Checksum: 1707848124
Get Checksum: 1707848124
Get Checksum: 1707848124
Join finished
block finished. duration 15.0436398983
executed 51.0
ExpandPipette2.py completed successfully
gosub finished
close () {'description': 'Outer Pipette 2'}
closing name=--- desc=Outer Pipette 2
checking ownership. requestor=129.138.12.137
check software interlocks Y
interlocks ['Z']
actuate state mode=None-script, software_lock=False
doing actuation None-script close_channel True
Close Y ===>> OK
set states for children of Y. state=False
handle state [('Y', False)]
update switch state Y False args=() kw={'refresh': False} ncanvase=5
GetValveState Y ===>> False
change switch state (False, False)
---------------------------------------- close None (Outer Pipette 2) result=[(False, False)]
locked=[False]
sleep (1,) {}
SLEEP 1.0
refresh_canvas_needed fired
executed 176.0
felix_air_x2.py completed successfully
get achieved output
Requested Output= 0.000
Achieved Output=  0.000
get response blob
get output blob
active pid =HO,10;XP,10;TI,48;TD,8
persistence save...
persistence save - db
AutomatedRunPersister post_extraction_save deprecated
persistence save - dvc
no extraction position for 
create new session 4874009200
Get Checksum: 50379264
add_item exception <pychron.dvc.dvc_orm.MeasuredPositionTbl object at 0x12d5f7050> Traceback (most recent call last):
  File "/Users/obama/Programming/git/pychron_dev/pychron/database/core/database_adapter.py", line 520, in _add_item
    sess.flush()
  File "/Users/obama/anaconda/envs/pychron_development/lib/python2.7/site-packages/sqlalchemy/orm/session.py", line 2004, in flush
    self._flush(objects)
  File "/Users/obama/anaconda/envs/pychron_development/lib/python2.7/site-packages/sqlalchemy/orm/session.py", line 2122, in _flush
    transaction.rollback(_capture_exception=True)
  File "/Users/obama/anaconda/envs/pychron_development/lib/python2.7/site-packages/sqlalchemy/util/langhelpers.py", line 60, in __exit__
    compat.reraise(exc_type, exc_value, exc_tb)
  File "/Users/obama/anaconda/envs/pychron_development/lib/python2.7/site-packages/sqlalchemy/orm/session.py", line 2086, in _flush
    flush_context.execute()
  File "/Users/obama/anaconda/envs/pychron_development/lib/python2.7/site-packages/sqlalchemy/orm/unitofwork.py", line 373, in execute
    rec.execute(self)
  File "/Users/obama/anaconda/envs/pychron_development/lib/python2.7/site-packages/sqlalchemy/orm/unitofwork.py", line 532, in execute
    uow
  File "/Users/obama/anaconda/envs/pychron_development/lib/python2.7/site-packages/sqlalchemy/orm/persistence.py", line 174, in save_obj
    mapper, table, insert)
  File "/Users/obama/anaconda/envs/pychron_development/lib/python2.7/site-packages/sqlalchemy/orm/persistence.py", line 781, in _emit_insert_statements
    execute(statement, params)
  File "/Users/obama/anaconda/envs/pychron_development/lib/python2.7/site-packages/sqlalchemy/engine/base.py", line 914, in execute
    return meth(self, multiparams, params)
  File "/Users/obama/anaconda/envs/pychron_development/lib/python2.7/site-packages/sqlalchemy/sql/elements.py", line 323, in _execute_on_connection
    return connection._execute_clauseelement(self, multiparams, params)
  File "/Users/obama/anaconda/envs/pychron_development/lib/python2.7/site-packages/sqlalchemy/engine/base.py", line 1010, in _execute_clauseelement
    compiled_sql, distilled_params
  File "/Users/obama/anaconda/envs/pychron_development/lib/python2.7/site-packages/sqlalchemy/engine/base.py", line 1146, in _execute_context
    context)
  File "/Users/obama/anaconda/envs/pychron_development/lib/python2.7/site-packages/sqlalchemy/engine/base.py", line 1341, in _handle_dbapi_exception
    exc_info
  File "/Users/obama/anaconda/envs/pychron_development/lib/python2.7/site-packages/sqlalchemy/util/compat.py", line 199, in raise_from_cause
    reraise(type(exception), exception, tb=exc_tb)
  File "/Users/obama/anaconda/envs/pychron_development/lib/python2.7/site-packages/sqlalchemy/engine/base.py", line 1139, in _execute_context
    context)
  File "/Users/obama/anaconda/envs/pychron_development/lib/python2.7/site-packages/sqlalchemy/engine/default.py", line 450, in do_execute
    cursor.execute(statement, parameters)
  File "/Users/obama/anaconda/envs/pychron_development/lib/python2.7/site-packages/pymysql/cursors.py", line 134, in execute
    result = self._query(query)
  File "/Users/obama/anaconda/envs/pychron_development/lib/python2.7/site-packages/pymysql/cursors.py", line 282, in _query
    conn.query(q)
  File "/Users/obama/anaconda/envs/pychron_development/lib/python2.7/site-packages/pymysql/connections.py", line 767, in query
    self._execute_command(COMMAND.COM_QUERY, sql)
  File "/Users/obama/anaconda/envs/pychron_development/lib/python2.7/site-packages/pymysql/connections.py", line 957, in _execute_command
    self._write_bytes(prelude + sql[:chunk_size-1])
  File "/Users/obama/anaconda/envs/pychron_development/lib/python2.7/site-packages/pymysql/connections.py", line 916, in _write_bytes
    raise err.OperationalError(2006, "MySQL server has gone away (%r)" % (e,))
OperationalError: (pymysql.err.OperationalError) (2006, "MySQL server has gone away (error(32, 'Broken pipe'))") [SQL: u'INSERT INTO `MeasuredPositionTbl` (position, x, y, z, is_degas, `analysisID`, `loadName`) VALUES (%s, %s, %s, %s, %s, %s, %s)'] [parameters: (None, None, None, None, 0, None, None)]

close session 4874009200
Extraction Finished
13:11:40 -- ******* Extraction Finished *******
no overlap. not waiting for min ms pumptime
13:11:40 -- Sending spectrometer configuration
======== Sending configuration ========
SetZFocus 9.84 ===>> OK
SetHV 9000.0 ===>> OK
SetZSymmetry 18.34 ===>> OK
SetExtractionLens 42.35 ===>> OK
SetIonRepeller -4.08 ===>> OK
SetElectronEnergy 107.0 ===>> OK
SetYSymmetry 12.72 ===>> OK
send trap current 400.0
GetParameter Trap Current Readback ===>> 398.75553927852
SetParameter Trap Current Set,400.0 ===>> OK
updating mftable name argon
Using mftable located at /Users/obama/PychronDev/setupfiles/spectrometer/mftables/argon.csv
============ MFtable ===========
Isotope  H2     H1     AX     L1     L2     L2(CDD)
Ar40     3.4941 3.5646 3.6354 3.7107 3.8117 3.7976
Ar39     3.4250 3.4941 3.5634 3.6372 3.7362 3.7225
Ar36     3.2149 3.2800 3.3448 3.4141 3.5168 3.4941
================================
get initial guess parabolic
get initial guess parabolic
get initial guess parabolic
get initial guess parabolic
get initial guess parabolic
get initial guess parabolic
======== Configuration Finished ========
GetYSymmetry ===>> 12.72
GetZSymmetry ===>> 18.34
GetParameter Trap Current Readback ===>> 397.972349386559
GetHighVoltage ===>> 9000
start measurement
do measurement
L#=ba-01-F analysis type=blank_air
Measurement Started felix_analysis400_120.py
13:11:40 -- ******* Measurement Started felix_analysis400_120.py *******
state changed from extraction to measurement
setting spec, defl, and gains
GetExtractionLens ===>> 42.35
GetYSymmetry ===>> 12.72
GetZSymmetry ===>> 18.34
GetZFocus ===>> 9.84
GetDeflection H2 (CDD) ===>> 3250
GetDeflection H1 (CDD) ===>> 3250
GetDeflection AX (CDD) ===>> 3250
GetDeflection L1 (CDD) ===>> 3250
GetDeflection L2 (CDD) ===>> 0
GetGain H2 ===>> 0.9809305
GetGain H1 ===>> 0.966108
GetGain AX ===>> 0.96253
GetGain L1 ===>> 0.970094835296087
GetGain L2 ===>> 0.967359864778375
GetGain H2(CDD) ===>> 0
GetGain H1(CDD) ===>> 0
GetGain AX(CDD) ===>> 0
GetGain L1(CDD) ===>> 0
GetGain L2(CDD) ===>> 0
pre measurement save
New frame /Users/obama/PychronDev/data/isotopes/5e/4e33ed-1109-4b77-a985-6960214c90c2.h5
flush and close file /Users/obama/PychronDev/data/isotopes/5e/4e33ed-1109-4b77-a985-6960214c90c2.h5
testing...
no interpolation path defined
executed 655.442112
unknown measurement script
activate_detectors ('H2', 'H1', 'AX', 'L1', 'L2(CDD)') {}
activate detectors
*************** Set Analysis View Ar/Ar
clearing graphs
clear isotope group
setting isotope det=H2, iso=Ar40
setting isotope det=H1, iso=Ar39
setting isotope det=AX, iso=Ar38
setting isotope det=L1, iso=Ar37
setting isotope det=L2(CDD), iso=Ar36
load analysis view
position_magnet ('Ar40',) {'detector': 'H2'}
detector Detector(H2)
POSITION Ar40 H2
setting detector H2 to Ar40 (39.9624)
setting detector H1 to Ar39 (38.8624)
setting detector AX to Ar38 (37.9624)
setting detector L1 to Ar37 (36.9624)
setting detector L2 to Ar36 (35.8624)
setting detector H2(CDD) to Ar40 (39.8624)
setting detector H1(CDD) to Ar39 (38.8624)
setting detector AX(CDD) to Ar38 (37.8624)
setting detector L1(CDD) to Ar37 (36.8624)
setting detector L2(CDD) to Ar36 (35.9624)
Mapping mass to dac mass func: "parabolic"
H2 map mass coeffs = [ -2.21374612e-04   8.66930544e-02   3.83201281e-01]
H2 map mass to dac 39.9624 >> 3.49413
GetHighVoltage ===>> 9000
positioning Ar40 (3.49413) on H2
setting magnet DAC
current  : 3.494130
requested: 3.494130
Delta Dac: 0.000000
Checking detector protection. dv=0.00000
SetMagnetDAC 3.49413 ===>> OK
Magnet settling time: 0.500
equilibrate () {'delay': 3, 'inlet': 'H', 'outlet': 'V', 'eqtime': 30.0}
Equilibration Started
13:11:42 -- ******* Equilibration Started *******
checking ownership. requestor=129.138.12.137
check software interlocks V
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script close_channel True
Close V ===>> OK
GetValveState V ===>> False
change switch state (False, False)
waiting 3s before opening inlet value ('H',)
set states for children of V. state=False
handle state [('V', False)]
update switch state V False args=() kw={'refresh': False} ncanvase=5
refresh_canvas_needed fired
Get Checksum: -1156809732
checking ownership. requestor=129.138.12.137
check software interlocks H
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script open_channel True
Open H ===>> OK
set states for children of H. state=True
handle state [('H', True)]
update switch state H True args=() kw={'refresh': False} ncanvase=5
GetValveState H ===>> OK
change switch state (True, True)
update switch state H True args=() kw={} ncanvase=5
refresh_canvas_needed fired
13:11:46 -- OPEN   VALVE-H (Felix Inlet)
set_time_zero () {}
equilibrating for 30.0sec
sniff (30.0,) {}
py_sniff
build tables- sniff [Detector(H2), Detector(H1), Detector(AX), Detector(L1), Detector(L2(CDD))]
add group /sniff/Ar40 (Group) '' table H2
add group /sniff/Ar39 (Group) '' table H1
add group /sniff/Ar38 (Group) '' table AX
add group /sniff/Ar37 (Group) '' table L1
add group /sniff/Ar36 (Group) '' table L2(CDD)
flush and close file /Users/obama/PychronDev/data/isotopes/5e/4e33ed-1109-4b77-a985-6960214c90c2.h5
measuring sniff. ncounts=30.0
starting measurement
Get Checksum: -1338572922
Get Checksum: -1338572922
Get Checksum: -1338572922
Get Checksum: -1338572922
Get Checksum: -1338572922
Get Checksum: -1338572922
Get Checksum: -1338572922
Get Checksum: -1338572922
13:12:11 -- collecting point 25
Get Checksum: -1338572922
Equilibration Finished
13:12:16 -- ******* Equilibration Finished *******
checking ownership. requestor=129.138.12.137
check software interlocks H
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script close_channel True
Get Checksum: -1338572922
Close H ===>> OK
GetValveState H ===>> False
change switch state (False, False)
Post Equilibration Started felix_pump_extraction_line.py
13:12:16 -- ******* Post Equilibration Started felix_pump_extraction_line.py *******
testing...
no interpolation path defined
calculate duration
testing...
no interpolation path defined
executed 4.0
executed 4.0
Pump after analysis
doing GOSUB
testing...
no interpolation path defined
executed 4.0
Pump Bone
close () {'description': 'Felix Inlet'}
closing name=--- desc=Felix Inlet
checking ownership. requestor=129.138.12.137
check software interlocks H
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script close_channel True
Close H ===>> OK
GetValveState H ===>> False
change switch state (False, False)
---------------------------------------- close None (Felix Inlet) result=[(False, False)]
locked=[False]
is_closed ('A',) {}
is A () closed?
is closed False
close () {'description': 'CO2 Laser to Bone'}
closing name=--- desc=CO2 Laser to Bone
checking ownership. requestor=129.138.12.137
check software interlocks F
interlocks []
actuate state mode=None-script, software_lock=True
VALVE-F(CO2 Laser to Bone) software locked
change switch state (True, False)
---------------------------------------- close None (CO2 Laser to Bone) result=[(True, False)]
locked=[True]
sleep (1,) {}
SLEEP 1.0
set states for children of H. state=False
handle state [('H', False)]
update switch state H False args=() kw={'refresh': False} ncanvase=5
refresh_canvas_needed fired
close () {'description': 'CO2 Laser to Roughing'}
closing name=--- desc=CO2 Laser to Roughing
checking ownership. requestor=129.138.12.137
check software interlocks G
interlocks []
actuate state mode=None-script, software_lock=True
VALVE-G(CO2 Laser to Roughing) software locked
change switch state (True, False)
---------------------------------------- close None (CO2 Laser to Roughing) result=[(True, False)]
locked=[True]
open () {'description': 'Bone to Turbo'}
opening name=--- desc=Bone to Turbo
checking ownership. requestor=129.138.12.137
check software interlocks C
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script open_channel True
Open C ===>> OK
GetValveState C ===>> OK
change switch state (True, True)
update switch state C True args=() kw={} ncanvase=5
13:12:17 -- OPEN   VALVE-C (Bone to Turbo)
---------------------------------------- open None (Bone to Turbo) result=[(True, True)], time=0.27 sec
locked=[False]
open () {'description': 'Bone to Getter GP-50'}
opening name=--- desc=Bone to Getter GP-50
checking ownership. requestor=129.138.12.137
check software interlocks N
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script open_channel False
Open N ===>> OK
GetValveState N ===>> OK
change switch state (True, True)
update switch state N True args=() kw={} ncanvase=5
measurement finished
estimated time: 31.457 actual time: :31.595
flush and close file /Users/obama/PychronDev/data/isotopes/5e/4e33ed-1109-4b77-a985-6960214c90c2.h5
set_fits () {}
using default fits file=/Users/obama/PychronDev/scripts/measurement/fits/nominal.yaml
set "Ar40" to "('Parabolic', 'SEM')"
13:12:18 -- OPEN   VALVE-N (Bone to Getter GP-50)
set "Ar36" to "('Parabolic', 'SEM')"
---------------------------------------- open None (Bone to Getter GP-50) result=[(True, True)], time=0.27 sec
set "Ar37" to "('linear', 'SEM')"
set "Ar38" to "('linear', 'SEM')"
set "Ar39" to "('Parabolic', 'SEM')"
set_baseline_fits () {}
using default fits file=/Users/obama/PychronDev/scripts/measurement/fits/nominal.yaml
set "H2" to "('average', 'SEM')"
set "L2(CDD)" to "('average', 'SEM')"
set "L1" to "('average', 'SEM')"
set "AX" to "('average', 'SEM')"
set "H1" to "('average', 'SEM')"
multicollect () {'integration_time': 1.048576, 'ncounts': 400}
build tables- signal [Detector(H2), Detector(H1), Detector(AX), Detector(L1), Detector(L2(CDD))]
add group /signal/Ar40 (Group) '' table H2
add group /signal/Ar39 (Group) '' table H1
add group /signal/Ar38 (Group) '' table AX
add group /signal/Ar37 (Group) '' table L1
add group /signal/Ar36 (Group) '' table L2(CDD)
flush and close file /Users/obama/PychronDev/data/isotopes/5e/4e33ed-1109-4b77-a985-6960214c90c2.h5
measuring signal. ncounts=400
locked=[False]
open () {'description': 'Bone to Diode Laser'}
opening name=--- desc=Bone to Diode Laser
checking ownership. requestor=129.138.12.137
check software interlocks B
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script open_channel True
Open B ===>> OK
GetValveState B ===>> OK
change switch state (True, True)
update switch state B True args=() kw={} ncanvase=5
13:12:18 -- OPEN   VALVE-B (Bone to Diode Laser)
---------------------------------------- open None (Bone to Diode Laser) result=[(True, True)], time=0.26 sec
starting measurement
locked=[False]
open () {'description': 'Bone to CO2 Laser'}
opening name=--- desc=Bone to CO2 Laser
checking ownership. requestor=129.138.12.137
check software interlocks D
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script open_channel True
Open D ===>> OK
set states for children of D. state=True
handle state [('D', True)]
update switch state D True args=() kw={'refresh': False} ncanvase=5
GetValveState D ===>> OK
change switch state (True, True)
update switch state D True args=() kw={} ncanvase=5
refresh_canvas_needed fired
Get Checksum: -1209370789
13:12:19 -- OPEN   VALVE-D (Bone to CO2 Laser)
---------------------------------------- open None (Bone to CO2 Laser) result=[(True, True)], time=0.46 sec
locked=[False]
sleep (1,) {}
SLEEP 1.0
set_resource () {'name': 'CO2PumpTimeFlag', 'value': 30}
Set CO2PumpTimeFlag 30 ===>> OK
release ('FelixCO2Flag',) {}
release FelixCO2Flag
Set FelixCO2Flag 0 ===>> OK
executed 6.0
PumpBone.py completed successfully
gosub finished
get_resource_value () {'name': 'FelixMiniboneFlag'}
Read FelixMiniboneFlag ===>> 1
Get Resource Value FelixMiniboneFlag=1.0
doing GOSUB
testing...
no interpolation path defined
executed 0
get_resource_value () {'name': 'FelixMiniboneFlag'}
Read FelixMiniboneFlag ===>> 1
Get Resource Value FelixMiniboneFlag=1.0
Pump minibone
open () {'description': 'Bone to Minibone'}
opening name=--- desc=Bone to Minibone
checking ownership. requestor=129.138.12.137
check software interlocks E
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script open_channel False
Open E ===>> OK
GetValveState E ===>> OK
change switch state (True, True)
update switch state E True args=() kw={} ncanvase=5
13:12:21 -- OPEN   VALVE-E (Bone to Minibone)
---------------------------------------- open None (Bone to Minibone) result=[(True, True)], time=0.21 sec
locked=[False]
open () {'description': 'Minibone to Turbo'}
opening name=--- desc=Minibone to Turbo
checking ownership. requestor=129.138.12.137
check software interlocks P
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script open_channel True
Open P ===>> OK
GetValveState P ===>> OK
change switch state (True, True)
update switch state P True args=() kw={} ncanvase=5
13:12:21 -- OPEN   VALVE-P (Minibone to Turbo)
---------------------------------------- open None (Minibone to Turbo) result=[(True, True)], time=0.27 sec
locked=[False]
open () {'description': 'Quad Inlet'}
opening name=--- desc=Quad Inlet
checking ownership. requestor=129.138.12.137
check software interlocks Q
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script open_channel True
Open Q ===>> OK
GetValveState Q ===>> OK
change switch state (True, True)
update switch state Q True args=() kw={} ncanvase=5
13:12:22 -- OPEN   VALVE-Q (Quad Inlet)
---------------------------------------- open None (Quad Inlet) result=[(True, True)], time=0.22 sec
locked=[False]
close () {'description': 'Minibone to Bone'}
closing name=--- desc=Minibone to Bone
checking ownership. requestor=129.138.12.137
check software interlocks I
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script close_channel True
Close I ===>> OK
set states for children of I. state=False
handle state [('I', False)]
update switch state I False args=() kw={'refresh': False} ncanvase=5
GetValveState I ===>> False
change switch state (False, False)
---------------------------------------- close None (Minibone to Bone) result=[(False, False)]
locked=[False]
set_resource () {'name': 'MinibonePumpTimeFlag', 'value': 30}
Set MinibonePumpTimeFlag 30 ===>> OK
release ('FelixMiniboneFlag',) {}
release FelixMiniboneFlag
Set FelixMiniboneFlag 0 ===>> OK
executed 0
PumpMinibone.py completed successfully
gosub finished
executed 4.0
felix_pump_extraction_line.py completed successfully
Post Equilibration Finished
13:12:22 -- ******* Post Equilibration Finished *******
refresh_canvas_needed fired
Get Checksum: 1263727693
User entered calibrated position 3
Move to hole 3 type=<type 'str'>
hole=3, position=(16.9097775, 0.0), calibrated_position=(16.9097775, 0.0)
{"units": "mm", "position": -16.9097775, "command": "MoveAbsolute", "drive": "feeder", "velocity": null} ===>> OK
Get Checksum: 1263727693
{"units": "mm", "command": "GetPosition", "drive": "feeder"} ===>> -23744
update feeder position=23744.0
{"command": "Moving", "drive": "feeder"} ===>> OK
{"units": "mm", "command": "GetPosition", "drive": "feeder"} ===>> -24652
update feeder position=24652.0
{"command": "Moving", "drive": "feeder"} ===>> OK
{"units": "mm", "command": "GetPosition", "drive": "feeder"} ===>> -25700
update feeder position=25700.0
{"command": "Moving", "drive": "feeder"} ===>> OK
{"units": "mm", "command": "GetPosition", "drive": "feeder"} ===>> -27075
update feeder position=27075.0
{"command": "Moving", "drive": "feeder"} ===>> OK
Get Checksum: 1263727693
{"units": "mm", "command": "GetPosition", "drive": "feeder"} ===>> -28444
update feeder position=28444.0
{"command": "Moving", "drive": "feeder"} ===>> OK
{"units": "mm", "command": "GetPosition", "drive": "feeder"} ===>> -29956
update feeder position=29956.0
{"command": "Moving", "drive": "feeder"} ===>> OK
{"units": "mm", "command": "GetPosition", "drive": "feeder"} ===>> -31538
update feeder position=31538.0
{"command": "Moving", "drive": "feeder"} ===>> OK
{"units": "mm", "command": "GetPosition", "drive": "feeder"} ===>> -33356
update feeder position=33356.0
{"command": "Moving", "drive": "feeder"} ===>> OK
{"units": "mm", "command": "GetPosition", "drive": "feeder"} ===>> -35241
update feeder position=35241.0
{"command": "Moving", "drive": "feeder"} ===>> OK
Get Checksum: 1263727693
{"units": "mm", "command": "GetPosition", "drive": "feeder"} ===>> -36948
update feeder position=36948.0
{"command": "Moving", "drive": "feeder"} ===>> OK
{"units": "mm", "command": "GetPosition", "drive": "feeder"} ===>> -38570
update feeder position=38570.0
{"command": "Moving", "drive": "feeder"} ===>> OK
{"units": "mm", "command": "GetPosition", "drive": "feeder"} ===>> -40337
update feeder position=40337.0
{"command": "Moving", "drive": "feeder"} ===>> OK
GetDeflection L2 (CDD) ===>> 0
testing L2_CDD_==3250
evaluate ot="L2(CDD).deflection==3250" t="L2_CDD_==3250", ctx="{'L2_CDD_': 0.0}"
{"units": "mm", "command": "GetPosition", "drive": "feeder"} ===>> -41667
update feeder position=41667.0
{"command": "Moving", "drive": "feeder"} ===>> OK
{"units": "mm", "command": "GetPosition", "drive": "feeder"} ===>> -42800
update feeder position=42800.0
{"command": "Moving", "drive": "feeder"} ===>> OK
Get Checksum: 1263727693
{"units": "mm", "command": "GetPosition", "drive": "feeder"} ===>> -43809
update feeder position=43809.0
{"command": "Moving", "drive": "feeder"} ===>> OK
{"units": "mm", "command": "GetPosition", "drive": "feeder"} ===>> -44732
update feeder position=44732.0
{"command": "Moving", "drive": "feeder"} ===>> OK
{"units": "mm", "command": "GetPosition", "drive": "feeder"} ===>> -45417
update feeder position=45417.0
{"command": "Moving", "drive": "feeder"} ===>> OK
{"units": "mm", "command": "GetPosition", "drive": "feeder"} ===>> -45516
update feeder position=45516.0
{"command": "Moving", "drive": "feeder"} ===>> False
{"units": "mm", "command": "GetPosition", "drive": "feeder"} ===>> -45516
update feeder position=45516.0
{"command": "Moving", "drive": "feeder"} ===>> False
Get Checksum: 1263727693
{"units": "mm", "command": "GetPosition", "drive": "feeder"} ===>> -45516
update feeder position=45516.0
{"command": "Moving", "drive": "feeder"} ===>> False
Move complete
querying axis positions
{"units": "mm", "command": "GetPosition", "drive": "feeder"} ===>> -45516
update feeder position=45516.0
Get Checksum: 1263727693
Get Checksum: 1263727693
GetDeflection L2 (CDD) ===>> 0
testing L2_CDD_==3250
evaluate ot="L2(CDD).deflection==3250" t="L2_CDD_==3250", ctx="{'L2_CDD_': 0.0}"
13:12:44 -- collecting point 25
Get Checksum: 1263727693
Get Checksum: 1263727693
Get Checksum: 1263727693
GetDeflection L2 (CDD) ===>> 0
testing L2_CDD_==3250
evaluate ot="L2(CDD).deflection==3250" t="L2_CDD_==3250", ctx="{'L2_CDD_': 0.0}"
Get Checksum: 1263727693
Get Checksum: 1263727693
Get Checksum: 1263727693
User entered calibrated position 1
Move to hole 1 type=<type 'str'>
hole=1, position=(0.0, 0.0), calibrated_position=(0.0, 0.0)
doing hystersis
hystersis position=-5.0
{"units": "mm", "position": 5.0, "command": "MoveAbsolute", "drive": "feeder", "velocity": null} ===>> OK
{"units": "mm", "command": "GetPosition", "drive": "feeder"} ===>> -44548
update feeder position=44548.0
{"command": "Moving", "drive": "feeder"} ===>> OK
GetDeflection L2 (CDD) ===>> 0
testing L2_CDD_==3250
evaluate ot="L2(CDD).deflection==3250" t="L2_CDD_==3250", ctx="{'L2_CDD_': 0.0}"
{"units": "mm", "command": "GetPosition", "drive": "feeder"} ===>> -43663
update feeder position=43663.0
Get Checksum: 1263727693
{"command": "Moving", "drive": "feeder"} ===>> OK
{"units": "mm", "command": "GetPosition", "drive": "feeder"} ===>> -42355
update feeder position=42355.0
{"command": "Moving", "drive": "feeder"} ===>> OK
{"units": "mm", "command": "GetPosition", "drive": "feeder"} ===>> -41134
update feeder position=41134.0
{"command": "Moving", "drive": "feeder"} ===>> OK
{"units": "mm", "command": "GetPosition", "drive": "feeder"} ===>> -39819
update feeder position=39819.0
{"command": "Moving", "drive": "feeder"} ===>> OK
{"units": "mm", "command": "GetPosition", "drive": "feeder"} ===>> -38031
update feeder position=38031.0
{"command": "Moving", "drive": "feeder"} ===>> OK
Get Checksum: 1263727693
{"units": "mm", "command": "GetPosition", "drive": "feeder"} ===>> -36337
update feeder position=36337.0
{"command": "Moving", "drive": "feeder"} ===>> OK
{"units": "mm", "command": "GetPosition", "drive": "feeder"} ===>> -34535
update feeder position=34535.0
{"command": "Moving", "drive": "feeder"} ===>> OK
{"units": "mm", "command": "GetPosition", "drive": "feeder"} ===>> -32536
update feeder position=32536.0
{"command": "Moving", "drive": "feeder"} ===>> OK
13:13:10 -- collecting point 50
{"units": "mm", "command": "GetPosition", "drive": "feeder"} ===>> -30047
update feeder position=30047.0
{"command": "Moving", "drive": "feeder"} ===>> OK
{"units": "mm", "command": "GetPosition", "drive": "feeder"} ===>> -27761
update feeder position=27761.0
{"command": "Moving", "drive": "feeder"} ===>> OK
Get Checksum: 1263727693
{"units": "mm", "command": "GetPosition", "drive": "feeder"} ===>> -25415
update feeder position=25415.0
{"command": "Moving", "drive": "feeder"} ===>> OK
{"units": "mm", "command": "GetPosition", "drive": "feeder"} ===>> -22892
update feeder position=22892.0
{"command": "Moving", "drive": "feeder"} ===>> OK
{"units": "mm", "command": "GetPosition", "drive": "feeder"} ===>> -20072
update feeder position=20072.0
{"command": "Moving", "drive": "feeder"} ===>> OK
{"units": "mm", "command": "GetPosition", "drive": "feeder"} ===>> -17287
update feeder position=17287.0
{"command": "Moving", "drive": "feeder"} ===>> OK
{"units": "mm", "command": "GetPosition", "drive": "feeder"} ===>> -14270
update feeder position=14270.0
{"command": "Moving", "drive": "feeder"} ===>> OK
Get Checksum: 1263727693
{"units": "mm", "command": "GetPosition", "drive": "feeder"} ===>> -11298
update feeder position=11298.0
{"command": "Moving", "drive": "feeder"} ===>> OK
{"units": "mm", "command": "GetPosition", "drive": "feeder"} ===>> -8155
update feeder position=8155.0
{"command": "Moving", "drive": "feeder"} ===>> OK
GetDeflection L2 (CDD) ===>> 0
testing L2_CDD_==3250
evaluate ot="L2(CDD).deflection==3250" t="L2_CDD_==3250", ctx="{'L2_CDD_': 0.0}"
{"units": "mm", "command": "GetPosition", "drive": "feeder"} ===>> -5688
update feeder position=5688.0
{"command": "Moving", "drive": "feeder"} ===>> OK
{"units": "mm", "command": "GetPosition", "drive": "feeder"} ===>> -3362
update feeder position=3362.0
{"command": "Moving", "drive": "feeder"} ===>> OK
{"units": "mm", "command": "GetPosition", "drive": "feeder"} ===>> -1150
update feeder position=1150.0
{"command": "Moving", "drive": "feeder"} ===>> OK
Get Checksum: 1263727693
{"units": "mm", "command": "GetPosition", "drive": "feeder"} ===>> 1230
update feeder position=-1230.0
{"command": "Moving", "drive": "feeder"} ===>> OK
{"units": "mm", "command": "GetPosition", "drive": "feeder"} ===>> 3162
update feeder position=-3162.0
{"command": "Moving", "drive": "feeder"} ===>> OK
{"units": "mm", "command": "GetPosition", "drive": "feeder"} ===>> 3875
update feeder position=-3875.0
{"command": "Moving", "drive": "feeder"} ===>> False
{"units": "mm", "command": "GetPosition", "drive": "feeder"} ===>> 3875
update feeder position=-3875.0
{"command": "Moving", "drive": "feeder"} ===>> False
{"units": "mm", "command": "GetPosition", "drive": "feeder"} ===>> 3875
update feeder position=-3875.0
{"command": "Moving", "drive": "feeder"} ===>> False
Hystersis correction complete
querying axis positions
Get Checksum: 1263727693
{"units": "mm", "command": "GetPosition", "drive": "feeder"} ===>> 3875
update feeder position=-3875.0
{"units": "mm", "position": -0.0, "command": "MoveAbsolute", "drive": "feeder", "velocity": null} ===>> OK
{"units": "mm", "command": "GetPosition", "drive": "feeder"} ===>> 2959
update feeder position=-2959.0
{"command": "Moving", "drive": "feeder"} ===>> OK
{"units": "mm", "command": "GetPosition", "drive": "feeder"} ===>> 2140
update feeder position=-2140.0
{"command": "Moving", "drive": "feeder"} ===>> OK
{"units": "mm", "command": "GetPosition", "drive": "feeder"} ===>> 1286
update feeder position=-1286.0
{"command": "Moving", "drive": "feeder"} ===>> OK
{"units": "mm", "command": "GetPosition", "drive": "feeder"} ===>> 486
update feeder position=-486.0
{"command": "Moving", "drive": "feeder"} ===>> OK
Get Checksum: 1263727693
{"units": "mm", "command": "GetPosition", "drive": "feeder"} ===>> -1
update feeder position=1.0
{"command": "Moving", "drive": "feeder"} ===>> False
{"units": "mm", "command": "GetPosition", "drive": "feeder"} ===>> -1
update feeder position=1.0
{"command": "Moving", "drive": "feeder"} ===>> False
{"units": "mm", "command": "GetPosition", "drive": "feeder"} ===>> -1
update feeder position=1.0
{"command": "Moving", "drive": "feeder"} ===>> False
Move complete
querying axis positions
{"units": "mm", "command": "GetPosition", "drive": "feeder"} ===>> -1
update feeder position=1.0
GetDeflection L2 (CDD) ===>> 0
testing L2_CDD_==3250
evaluate ot="L2(CDD).deflection==3250" t="L2_CDD_==3250", ctx="{'L2_CDD_': 0.0}"
Get Checksum: 1263727693
Get Checksum: 1263727693
Get Checksum: 1263727693
{"scalar": 1, "command": "Slew", "drive": "feeder"} ===>> OK
{"units": "mm", "command": "GetPosition", "drive": "feeder"} ===>> 1130
update feeder position=-1130.0
{"command": "Stalled", "drive": "feeder"} ===>> OK
GetDeflection L2 (CDD) ===>> 0
testing L2_CDD_==3250
evaluate ot="L2(CDD).deflection==3250" t="L2_CDD_==3250", ctx="{'L2_CDD_': 0.0}"
13:13:36 -- collecting point 75
{"command": "StopDrive", "drive": "feeder"} ===>> OK
Get Checksum: 1263727693
Get Checksum: 1263727693
Get Checksum: 1263727693
{"command": "SetHome", "drive": "feeder"} ===>> No Response
Get Checksum: 1263727693
GetDeflection L2 (CDD) ===>> 0
testing L2_CDD_==3250
evaluate ot="L2(CDD).deflection==3250" t="L2_CDD_==3250", ctx="{'L2_CDD_': 0.0}"
Get Checksum: 1263727693
Get Checksum: 1263727693
Get Checksum: 1263727693
GetDeflection L2 (CDD) ===>> 0
testing L2_CDD_==3250
evaluate ot="L2(CDD).deflection==3250" t="L2_CDD_==3250", ctx="{'L2_CDD_': 0.0}"
Get Checksum: 1263727693
Get Checksum: 1263727693
13:14:03 -- collecting point 100
Get Checksum: 1263727693
clear sample states
backing up furnace sample states to /Users/obama/PychronDev/.appdata/~furnace_sample_states.yaml
dump sample states
Get Checksum: 1263727693
GetDeflection L2 (CDD) ===>> 0
testing L2_CDD_==3250
evaluate ot="L2(CDD).deflection==3250" t="L2_CDD_==3250", ctx="{'L2_CDD_': 0.0}"
Get Checksum: 1263727693
Get Checksum: 1263727693
Get Checksum: 1263727693
GetDeflection L2 (CDD) ===>> 0
testing L2_CDD_==3250
evaluate ot="L2(CDD).deflection==3250" t="L2_CDD_==3250", ctx="{'L2_CDD_': 0.0}"
Get Checksum: 1263727693
Get Checksum: 1263727693
Get Checksum: 1263727693
Get Checksum: 1263727693
GetDeflection L2 (CDD) ===>> 0
testing L2_CDD_==3250
evaluate ot="L2(CDD).deflection==3250" t="L2_CDD_==3250", ctx="{'L2_CDD_': 0.0}"
13:14:29 -- collecting point 125
set states for children of V. state=True
handle state [('V', True)]
update switch state V True args=() kw={'refresh': False} ncanvase=5
refresh_canvas_needed fired
Get Checksum: 1377587088
Get Checksum: 1377587088
Get Checksum: 1377587088
GetDeflection L2 (CDD) ===>> 0
testing L2_CDD_==3250
evaluate ot="L2(CDD).deflection==3250" t="L2_CDD_==3250", ctx="{'L2_CDD_': 0.0}"
%%%%%%%%%%%%%%%%%% Stop fired alive=True
13:14:41 -- stop execution
_cancel
Get Checksum: 1377587088
Queue cancel. stop timer
Stop timer. self._timer: <pychron.core.helpers.timer.Timer object at 0x129559770>
Estimated total time= 142216.0, elapsed time= 289.0, deviation= 141927.0
set extraction state False (0.75, 'green', 1.5)
wait dialog stopped
Cancel run state=None do_post_equilibration=True
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% disable
set extraction state False (0.75, 'red', 1.5)
disable
Post Termination Started
13:14:43 -- ******* Post Termination Started *******
Post Measurement Started felix_pump_ms.py
13:14:43 -- ******* Post Measurement Started felix_pump_ms.py *******
testing...
no interpolation path defined
executed 0
Pumping spectrometer
open () {'name': 'V'}
opening name=V desc=---
checking ownership. requestor=129.138.12.137
check software interlocks V
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script open_channel False
Open V ===>> OK
GetValveState V ===>> OK
change switch state (True, True)
update switch state V True args=() kw={} ncanvase=5
13:14:43 -- OPEN   VALVE-V (Felix Ion Pump)
---------------------------------------- open V () result=[(True, True)], time=0.13 sec
locked=[False]
executed 0
felix_pump_ms.py completed successfully
setting _ms_pumptime
Post Measurement Finished
13:14:43 -- ******* Post Measurement Finished *******
----------------- stop -----------------
Post Termination Finished
13:14:43 -- ******* Post Termination Finished *******
----------------- finish -----------------
state changed from measurement to failed
----------------- stop -----------------
measurement finished
estimated time: 419.430 actual time: :145.160
flush and close file /Users/obama/PychronDev/data/isotopes/5e/4e33ed-1109-4b77-a985-6960214c90c2.h5
measurement collection canceled
Cancel run state=canceled do_post_equilibration=True
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% disable
set extraction state False (0.75, 'red', 1.5)
disable
Post Termination Started
13:14:44 -- ******* Post Termination Started *******
----------------- stop -----------------
Post Termination Finished
13:14:44 -- ******* Post Termination Finished *******
----------------- finish -----------------
----------------- stop -----------------
state changed from failed to canceled
_cancel
Queue cancel. stop timer
Stop timer. self._timer: <pychron.core.helpers.timer.Timer object at 0x129559770>
Estimated total time= 142216.0, elapsed time= 289.0, deviation= 141927.0
set extraction state False (0.75, 'green', 1.5)
wait dialog stopped
Cancel run state=None do_post_equilibration=True
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% disable
set extraction state False (0.75, 'red', 1.5)
disable
Post Termination Started
13:14:44 -- ******* Post Termination Started *******
----------------- stop -----------------
Post Termination Finished
13:14:44 -- ******* Post Termination Finished *******
----------------- finish -----------------
----------------- stop -----------------
executed 655.442112
----------------- finish -----------------
----------------- stop -----------------
Measurement Finished unsuccessfully. Aborted=False
13:14:44 -- ******* Measurement Finished unsuccessfully. Aborted=False *******
failed execution step Measurement Failed
measurement did not complete successfully
state changed from canceled to failed
13:14:44 -- Automated run ba-01-F-509 failed duration: 283.669 s
----------------- finish -----------------
----------------- stop -----------------
finish run. runs completed=1
write rem/ex queues
/Users/obama/PychronDev/experiments/rem/FurnaceKSpar12_23_16.rem.txt
/Users/obama/PychronDev/experiments/rem/FurnaceKSpar12_23_16.ex.txt
doing event level: 3
